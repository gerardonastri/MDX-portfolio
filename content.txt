UBER CLONE project
---
  title: Uber-clone
  summary: A full-stack mobile application
  image: /images/projects/uber-clone.webp
  author: 'Gerardo Nastri'
  link: ''
  publishedAt: '2024-09-30'
---

Built with React Native for handling the user interface, Google Maps for rendering maps with directions, stripe for handling payments, serverless Postgres for managing databases, and styled with TailwindCSS, Uber Clone is a perfect mobile app. The primary goal is to demonstrate how to develop full-stack mobile applications to showcase the developer's skills in a unique manner that creates a lasting impact.

## Features

- **Onboarding Flow:** Seamless user registration and setup process.
- **Email Password Authentication with Verification:** Secure login with email verification.
- **oAuth Using Google:** Easy login using Google credentials.
- **Authorization:** Secure access control for different user roles.
- **Home Screen with Live Location & Google Map:** Real-time location tracking with markers on a map.
- **Recent Rides:** View a list of recent rides at a glance.
- **Google Places Autocomplete:** Search any place on Earth with autocomplete suggestions.
- **Find Rides:** Search for rides by entering 'From' and 'To' locations.
- **Select Rides from Map:** Choose available cars near your location from the map.
- **Confirm Ride with Detailed Information:** View complete ride details, including time and fare price.
- **Pay for Ride Using Stripe:** Make payments using multiple methods like cards and others.
- **Create Rides After Successful Payment:** Book a ride after confirming payment.
- **Profile:** Manage account details in the profile screen.
- **History:** Review all rides booked so far.
- **Responsive on Android and iOS:** Optimized for both Android and iOS devices.
and many more, including code architecture and reusability

## Technologies

- **Expo**: React Native Framework
- **Neon**: Postgres database
- **NativeWind**: Tailwindcss for react native applications
- **Clerk**: User Management 
- **Expo secure store**: storing session values with expo
- **Geoapify**: Geolocation
- **Places api e directions api**: Google Apis for geolocations and directions
- **Zustand**: State management
- **Stripe**: secure payments

## links
- [Expo NativeWind Setup](https://www.nativewind.dev/quick-starts/expo)
- [TypeScript Support for NativeWind](https://www.nativewind.dev/v4/getting-started/typescript)
- [Eslint and Prettier Setup](https://docs.expo.dev/guides/using-eslint/)
- [Serverless NeonDB](https://neon.tech/)
- [Clerk Auth](https://go.clerk.com/DtiSBEI)
- [Clerk Expo Quickstart](https://clerk.com/docs/quickstarts/expo)
- [Clerk Expo OAuth](https://clerk.com/docs/custom-flows/oauth-connections)
- [Geoapify Map](https://www.geoapify.com/)
- [Stripe React Native SDK](https://docs.stripe.com/payments/accept-a-payment?platform=react-native&ui=payment-sheet)
- [Stripe](https://docs.stripe.com/payments/accept-a-payment-deferred)

## Getting Started

To get started with this project, you can clone the repository and install the
dependencies:

```bash
git clone https://github.com/gerardonastri/uber-clone.git
cd uber-clone
npm install
```

Once the dependencies are installed, you can run the development server:

```bash
npx expo start
```


## Deployment

To deploy this project, you can use Expo to generate .apk or .aab file.

## Conclusion

This uber clone is a great example of how you can build a full-stack
application with React Native and Expo
